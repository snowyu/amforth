# Logic.

# -----------------------------------------------------------------------------
  CODEWORD Flag_foldable_2, "and", AND # ( x1 x2 -- x1&x2 )
                        # Combines the top two stack elements using bitwise AND.
# -----------------------------------------------------------------------------
  lw x5, 0(x4)
  addi x4, x4, 4
  and x3, x5, x3
  NEXT

# -----------------------------------------------------------------------------
  CODEWORD Flag_foldable_2, "or", OR # ( x1 x2 -- x1|x2 )
                       # Combines the top two stack elements using bitwise OR.
# -----------------------------------------------------------------------------
  lw x5, 0(x4)
  addi x4, x4, 4
  or x3, x5, x3
  NEXT

# -----------------------------------------------------------------------------
  CODEWORD Flag_foldable_2, "xor", XOR # ( x1 x2 -- x1|x2 )
                        # Combines the top two stack elements using bitwise exclusive-OR.
# -----------------------------------------------------------------------------
  lw x5, 0(x4)
  addi x4, x4, 4
  xor x3, x5, x3
  NEXT

# -----------------------------------------------------------------------------
  CODEWORD Flag_foldable_1|Flag_inline, "not", NOT # ( x -- ~x )
# -----------------------------------------------------------------------------
  xori x3, x3, -1
  NEXT

# -----------------------------------------------------------------------------
  CODEWORD Flag_foldable_1|Flag_inline, "invert", INVERT # ( x -- ~x )
# -----------------------------------------------------------------------------
  xori x3, x3, -1
  NEXT

